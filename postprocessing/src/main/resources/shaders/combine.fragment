/*******************************************************************************
 * Copyright 2012 bmanuel
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

#ifdef GL_ES
	#define PRECISION mediump
	precision PRECISION float;
#else
	#define PRECISION
#endif

uniform PRECISION sampler2D u_texture0;
uniform PRECISION sampler2D u_texture1;
uniform float Src1Intensity;
uniform float Src2Intensity;
uniform float Src1Saturation;
uniform float Src2Saturation;

varying vec2 v_texCoords;

// The constants 0.3, 0.59, and 0.11 are chosen because the
// human eye is more sensitive to green light, and less to blue.
const vec3 GRAYSCALE = vec3(0.3, 0.59, 0.11);

// 0 = totally desaturated
// 1 = saturation unchanged
// higher = increase saturation
//const float BaseSat = 1;
//const float BloomSat = 1;

vec3 adjustSaturation(vec3 color, float saturation)
{
	vec3 grey = vec3(dot(color, GRAYSCALE));
	//vec3 grey = vec3((color.r+color.g+color.b)*0.333);
	return mix(grey, color, saturation);
}

void main()
{
	// lookup inputs
	vec4 src1 = texture2D(u_texture0, v_texCoords);
	vec4 src2 = texture2D(u_texture1, v_texCoords);

	// adjust color saturation and intensity
	src1.rgb = adjustSaturation(src1.rgb,Src1Saturation) * Src1Intensity;
	src2.rgb = adjustSaturation(src2.rgb,Src2Saturation) * Src2Intensity;

	// darken the base image in areas where ther's a lot of bloom
	// to prevent things looking excessively burned-out
	//original *= (1.0 - clamp(bloom, 0.0, 1.0));
	src1 *= (1.0 - src2);

	// combine
	gl_FragColor = src1 + src2;
}